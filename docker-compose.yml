version: '3.9'

services:
  mysql:
    image: mysql:8.0.35
    container_name: ${APP_NAME}-mysql
    restart: unless-stopped
    command:
      - /bin/bash
      - '-c'
      - |
        # run database patcher
        if [ -f /scripts/patch-db.sh ]; then
          cp /scripts/patch-db.sh ~/patch-db.sh
          chmod +x ~/patch-db.sh
          ~/patch-db.sh &
        fi
        # run entrypoint
        docker-entrypoint.sh mysqld
    ports:
      - ${APP_DB_PORT}:3306
    volumes:
      - ./var/mysql:/var/lib/mysql
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./scripts/patch-db.sh:/scripts/patch-db.sh
      - ./data/sql:/sql
      - ./data/patches:/sql-patches
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  mongodb:
    image: mongo:7.0.4
    container_name: ${APP_NAME}-mongodb
    restart: unless-stopped
    ports:
      - ${APP_MONGODB_PORT}:27017
    volumes:
      - ./var/mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
  node:
    image: node:18.18.2-bookworm
    container_name: ${APP_NAME}-node
    restart: unless-stopped
    command:
      - /bin/bash
      - '-c'
      - |
        # set timezone
        if [ -n "$${APP_TIMEZONE}" ]; then
          ln -sf /usr/share/zoneinfo/$${APP_TIMEZONE} /etc/localtime
          dpkg-reconfigure -f noninteractive tzdata
        fi
        # set variables
        APP_DIR=/home/nodeapp
        CERT_DIR=/config/cert
        # copy config
        cp /config/app.json $${APP_DIR}
        # run initialization
        if [ -f /scripts/nodeapp-init.sh ]; then
          cp /scripts/nodeapp-init.sh ~/init.sh
          chmod +x ~/init.sh
          ~/init.sh &
        fi
        # install modules
        cd "$${APP_DIR}"
        if [ ! -d node_modules ]; then
          npm install
        fi
        # run entrypoint
        docker-entrypoint.sh node app.js \
          --ssl-key=$${CERT_DIR}/cert.key \
          --ssl-cert=$${CERT_DIR}/cert.crt-combined \
          --config=app.json
    working_dir: /home/nodeapp
    environment:
      APP_TIMEZONE: ${APP_TIMEZONE}
    ports:
      - ${APP_NODEAPP_PORT}:443
    volumes:
      - ./config:/config
      - ./scripts:/scripts
      - ./src/nodeapp:/home/nodeapp
  php:
    image: php:8.1.26-apache
    container_name: ${APP_NAME}-php
    restart: unless-stopped
    command:
      - /bin/bash
      - '-c'
      - |
        # set timezone
        if [ -n "$${APP_TIMEZONE}" ]; then
          ln -sf /usr/share/zoneinfo/$${APP_TIMEZONE} /etc/localtime
          dpkg-reconfigure -f noninteractive tzdata
        fi
        # set apache site configuration
        rm -rf $${APACHE_CONFDIR}/sites-enabled/*
        ln -s /config/app.conf $${APACHE_CONFDIR}/sites-enabled/
        # enable ssl and rewrite module
        a2enmod ssl rewrite
        # run initialization
        if [ -f /scripts/php-init.sh ]; then
          cp /scripts/php-init.sh ~/init.sh
          chmod +x ~/init.sh
          ~/init.sh &
        fi
        # run entrypoint
        docker-php-entrypoint apache2-foreground
    working_dir: /home/www
    environment:
      APP_DEBUG: ${APP_DEBUG}
      APP_TIMEZONE: ${APP_TIMEZONE}
    ports:
      - ${APP_HTTP_PORT}:80
      - ${APP_HTTPS_PORT}:443
    volumes:
      - ./config:/config
      - ./scripts:/scripts
      - ./src/www:/home/www
      - ./var/cache:/cache
    depends_on:
      - mysql
      - mongodb
